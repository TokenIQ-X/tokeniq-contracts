{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x545Ac0DaAa0b7095e62c7fa702C43a3A0F152d2e",
      "txHash": "0x020441c86920c600a8db4d80d31a6a49cc1e586f868616fb529a69327f57a80b",
      "kind": "transparent"
    },
    {
      "address": "0xA68f1CBff869a7f6c7A9BC9313E0B9E135A79a60",
      "txHash": "0xa43f6c78dc5445d79a22282722f262f14586c94e8bb9802fdb2ab0d639767f72",
      "kind": "transparent"
    },
    {
      "address": "0x8e827a12C78dED9459268eb05cce2C5d709FE6AF",
      "txHash": "0xa75d01abdbf41c4dddd055a687ba42b40456da459d6ce7c4b44a65e4b6a719e2",
      "kind": "transparent"
    },
    {
      "address": "0xd6D6fBc6c0ebbB07411acB0EDad6373db389aC13",
      "txHash": "0xaf3ded0ff3351165071601e9a9a06ec7de42ede38914690392dd9f408179d3c5",
      "kind": "uups"
    },
    {
      "address": "0x7b65E735F1b43102f672Dc04B6E33a424a955c13",
      "txHash": "0x47cc81cd3480b82459eb73b0c56345da30625eaebc6cce71d561340ce9cd39f5",
      "kind": "uups"
    }
  ],
  "impls": {
    "281f81939883d4a5e7edab07d017b38ac2b26ed99f53ad506ec9778568bb84b6": {
      "address": "0x1a983C4e0B9f57B5b34b6C753Ab13828ad21969F",
      "txHash": "0x2fa46890829e576ab50351596c257af6a334bbdc34cf4983fe704375db7c2000",
      "layout": {
        "solcVersion": "0.8.27",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:17"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:20"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:23"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:17"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:86"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "351",
            "type": "t_struct(Counter)8070_storage",
            "contract": "ERC721CollateralNFT",
            "src": "contracts/tokenization/templates/ERC721CollateralNFT.sol:33"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "352",
            "type": "t_string_storage",
            "contract": "ERC721CollateralNFT",
            "src": "contracts/tokenization/templates/ERC721CollateralNFT.sol:36"
          },
          {
            "label": "mintingFee",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "ERC721CollateralNFT",
            "src": "contracts/tokenization/templates/ERC721CollateralNFT.sol:40"
          },
          {
            "label": "feeRecipient",
            "offset": 0,
            "slot": "354",
            "type": "t_address",
            "contract": "ERC721CollateralNFT",
            "src": "contracts/tokenization/templates/ERC721CollateralNFT.sol:41"
          },
          {
            "label": "_tokenCollaterals",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_uint256,t_array(t_struct(Collateral)27954_storage)dyn_storage)",
            "contract": "ERC721CollateralNFT",
            "src": "contracts/tokenization/templates/ERC721CollateralNFT.sol:52"
          },
          {
            "label": "tokenCollateralValue",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721CollateralNFT",
            "src": "contracts/tokenization/templates/ERC721CollateralNFT.sol:55"
          },
          {
            "label": "tokenLoans",
            "offset": 0,
            "slot": "357",
            "type": "t_mapping(t_uint256,t_struct(LoanDetails)27977_storage)",
            "contract": "ERC721CollateralNFT",
            "src": "contracts/tokenization/templates/ERC721CollateralNFT.sol:67"
          },
          {
            "label": "_supportedCollateralTokens",
            "offset": 0,
            "slot": "358",
            "type": "t_struct(AddressSet)9831_storage",
            "contract": "ERC721CollateralNFT",
            "src": "contracts/tokenization/templates/ERC721CollateralNFT.sol:71"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Collateral)27954_storage)dyn_storage": {
            "label": "struct ERC721CollateralNFT.Collateral[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Collateral)27954_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct ERC721CollateralNFT.Collateral[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LoanDetails)27977_storage)": {
            "label": "mapping(uint256 => struct ERC721CollateralNFT.LoanDetails)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)9831_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)9516_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Collateral)27954_storage": {
            "label": "struct ERC721CollateralNFT.Collateral",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lockedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lockPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Counter)8070_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LoanDetails)27977_storage": {
            "label": "struct ERC721CollateralNFT.LoanDetails",
            "members": [
              {
                "label": "lender",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "interestRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "duration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "borrowedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Set)9516_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "d73e445df3e01950777793573b23fddb11c5e936881b2b13429149dfab02f9d7": {
      "address": "0x9EFb119c507CEa769b4277D6eC42274096579ce9",
      "txHash": "0xafe86700842a7b6d69c883ce9afab55b65f2b07341ed51749acd1ce4de0cf903",
      "layout": {
        "solcVersion": "0.8.27",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:508"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "tokenInfo",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_uint256,t_struct(TokenInfo)25548_storage)",
            "contract": "ERC1155HybridAsset",
            "src": "contracts/tokenization/templates/ERC1155HybridAsset.sol:64"
          },
          {
            "label": "nextTokenId",
            "offset": 0,
            "slot": "352",
            "type": "t_uint256",
            "contract": "ERC1155HybridAsset",
            "src": "contracts/tokenization/templates/ERC1155HybridAsset.sol:65"
          },
          {
            "label": "_tokenCollaterals",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_array(t_struct(Collateral)25557_storage)dyn_storage))",
            "contract": "ERC1155HybridAsset",
            "src": "contracts/tokenization/templates/ERC1155HybridAsset.sol:68"
          },
          {
            "label": "userCollateralValue",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155HybridAsset",
            "src": "contracts/tokenization/templates/ERC1155HybridAsset.sol:69"
          },
          {
            "label": "tokenLoans",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(LoanDetails)25570_storage))",
            "contract": "ERC1155HybridAsset",
            "src": "contracts/tokenization/templates/ERC1155HybridAsset.sol:72"
          },
          {
            "label": "_supportedCollateralTokens",
            "offset": 0,
            "slot": "356",
            "type": "t_struct(AddressSet)9831_storage",
            "contract": "ERC1155HybridAsset",
            "src": "contracts/tokenization/templates/ERC1155HybridAsset.sol:76"
          },
          {
            "label": "feeRecipient",
            "offset": 0,
            "slot": "358",
            "type": "t_address",
            "contract": "ERC1155HybridAsset",
            "src": "contracts/tokenization/templates/ERC1155HybridAsset.sol:79"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "359",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155HybridAsset",
            "src": "contracts/tokenization/templates/ERC1155HybridAsset.sol:630"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Collateral)25557_storage)dyn_storage": {
            "label": "struct ERC1155HybridAsset.Collateral[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(TokenType)25532": {
            "label": "enum ERC1155HybridAsset.TokenType",
            "members": [
              "NonFungible",
              "Fungible"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_struct(Collateral)25557_storage)dyn_storage)": {
            "label": "mapping(address => struct ERC1155HybridAsset.Collateral[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(LoanDetails)25570_storage)": {
            "label": "mapping(address => struct ERC1155HybridAsset.LoanDetails)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_array(t_struct(Collateral)25557_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(address => struct ERC1155HybridAsset.Collateral[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(LoanDetails)25570_storage))": {
            "label": "mapping(uint256 => mapping(address => struct ERC1155HybridAsset.LoanDetails))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TokenInfo)25548_storage)": {
            "label": "mapping(uint256 => struct ERC1155HybridAsset.TokenInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)9831_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)9516_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Collateral)25557_storage": {
            "label": "struct ERC1155HybridAsset.Collateral",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lockedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lockPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(LoanDetails)25570_storage": {
            "label": "struct ERC1155HybridAsset.LoanDetails",
            "members": [
              {
                "label": "lender",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "interestRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "duration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "borrowedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Set)9516_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TokenInfo)25548_storage": {
            "label": "struct ERC1155HybridAsset.TokenInfo",
            "members": [
              {
                "label": "tokenType",
                "type": "t_enum(TokenType)25532",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "maxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "mintingFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "75c7295c3007cddc1f812d250628f732d466b093195f98ffc458471ef70f5735": {
      "address": "0xa2B39823120Ea8e7a1f2E3E6864596644eE96689",
      "txHash": "0x78b9e452fe2279e737ef8f6a891cb56bede0018e8798dcfa9e99a0a4182af1c7",
      "layout": {
        "solcVersion": "0.8.27",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "erc20VaultTokenImpl",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "AssetFactory",
            "src": "contracts/tokenization/AssetFactory.sol:22"
          },
          {
            "label": "erc721CollateralNFTImpl",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "AssetFactory",
            "src": "contracts/tokenization/AssetFactory.sol:23"
          },
          {
            "label": "erc1155HybridAssetImpl",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "AssetFactory",
            "src": "contracts/tokenization/AssetFactory.sol:24"
          },
          {
            "label": "mintingFee",
            "offset": 0,
            "slot": "254",
            "type": "t_uint256",
            "contract": "AssetFactory",
            "src": "contracts/tokenization/AssetFactory.sol:27"
          },
          {
            "label": "feeRecipient",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "AssetFactory",
            "src": "contracts/tokenization/AssetFactory.sol:28"
          },
          {
            "label": "allAssets",
            "offset": 0,
            "slot": "256",
            "type": "t_array(t_address)dyn_storage",
            "contract": "AssetFactory",
            "src": "contracts/tokenization/AssetFactory.sol:44"
          },
          {
            "label": "assetDetails",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_struct(Asset)9595_storage)",
            "contract": "AssetFactory",
            "src": "contracts/tokenization/AssetFactory.sol:47"
          },
          {
            "label": "creatorAssets",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "AssetFactory",
            "src": "contracts/tokenization/AssetFactory.sol:50"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_enum(TokenType)9599": {
            "label": "enum AssetFactory.TokenType",
            "members": [
              "ERC20",
              "ERC721",
              "ERC1155"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Asset)9595_storage)": {
            "label": "mapping(address => struct AssetFactory.Asset)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Asset)9595_storage": {
            "label": "struct AssetFactory.Asset",
            "members": [
              {
                "label": "assetAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokenType",
                "type": "t_enum(TokenType)9599",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    }
  }
}
