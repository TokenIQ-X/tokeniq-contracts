{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x7CC324d15E5fF17c43188fB63b462B9a79dA68f6",
      "txHash": "0xe396ff546b4706d481ad2cff18812eb848dd009512ef6b5d3a4475adc03b78a1",
      "kind": "transparent"
    },
    {
      "address": "0xc4d732199B7d21207a74CFE6CEd4d17dD330C7Ea",
      "txHash": "0xf55de2f0951a8a56acd43e7c0796d1d01a2ea8e9c72aed715d8c994837f0c45d",
      "kind": "transparent"
    },
    {
      "address": "0xc9C0Fb76a50eAb570665977703cC8f7185c082b5",
      "txHash": "0x94ba93687200a966215f30b1113f531486b48badcdf23a88e0817e64aaae41f1",
      "kind": "uups"
    },
    {
      "address": "0x02406b6d17E743deA7fBbfAE8A15c82e4481E168",
      "txHash": "0xb4acd8cdab2f9e02db5eeaa754941b2dbc989c3830738c0f57b6031142488c9d",
      "kind": "transparent"
    }
  ],
  "impls": {
    "281f81939883d4a5e7edab07d017b38ac2b26ed99f53ad506ec9778568bb84b6": {
      "address": "0xF673F508104876c72C8724728f81d50E01649b40",
      "txHash": "0xbde36b0bd48dc7ae000602212fb1516146036f94de35d27997bd14a7867b6064",
      "layout": {
        "solcVersion": "0.8.27",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:17"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:20"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:23"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:17"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:86"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "351",
            "type": "t_struct(Counter)4412_storage",
            "contract": "ERC721CollateralNFT",
            "src": "contracts/tokenization/templates/ERC721CollateralNFT.sol:33"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "352",
            "type": "t_string_storage",
            "contract": "ERC721CollateralNFT",
            "src": "contracts/tokenization/templates/ERC721CollateralNFT.sol:36"
          },
          {
            "label": "mintingFee",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "ERC721CollateralNFT",
            "src": "contracts/tokenization/templates/ERC721CollateralNFT.sol:40"
          },
          {
            "label": "feeRecipient",
            "offset": 0,
            "slot": "354",
            "type": "t_address",
            "contract": "ERC721CollateralNFT",
            "src": "contracts/tokenization/templates/ERC721CollateralNFT.sol:41"
          },
          {
            "label": "_tokenCollaterals",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_uint256,t_array(t_struct(Collateral)11970_storage)dyn_storage)",
            "contract": "ERC721CollateralNFT",
            "src": "contracts/tokenization/templates/ERC721CollateralNFT.sol:52"
          },
          {
            "label": "tokenCollateralValue",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721CollateralNFT",
            "src": "contracts/tokenization/templates/ERC721CollateralNFT.sol:55"
          },
          {
            "label": "tokenLoans",
            "offset": 0,
            "slot": "357",
            "type": "t_mapping(t_uint256,t_struct(LoanDetails)11993_storage)",
            "contract": "ERC721CollateralNFT",
            "src": "contracts/tokenization/templates/ERC721CollateralNFT.sol:67"
          },
          {
            "label": "_supportedCollateralTokens",
            "offset": 0,
            "slot": "358",
            "type": "t_struct(AddressSet)6063_storage",
            "contract": "ERC721CollateralNFT",
            "src": "contracts/tokenization/templates/ERC721CollateralNFT.sol:71"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Collateral)11970_storage)dyn_storage": {
            "label": "struct ERC721CollateralNFT.Collateral[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Collateral)11970_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct ERC721CollateralNFT.Collateral[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LoanDetails)11993_storage)": {
            "label": "mapping(uint256 => struct ERC721CollateralNFT.LoanDetails)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)6063_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5748_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Collateral)11970_storage": {
            "label": "struct ERC721CollateralNFT.Collateral",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lockedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lockPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Counter)4412_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LoanDetails)11993_storage": {
            "label": "struct ERC721CollateralNFT.LoanDetails",
            "members": [
              {
                "label": "lender",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "interestRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "duration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "borrowedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Set)5748_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "2737c55bb1eeadd76799179f60bc6f5b3991e8d0c43f2b7efad22a2087d90885": {
      "address": "0x34D156D6C062804771652b48F2D65d58D3794113",
      "txHash": "0x5046054fe23eeddcc46e837b8ca817ba56b8caab1fd78c7ae037c6c6876ca30f",
      "layout": {
        "solcVersion": "0.8.27",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:508"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "tokenInfo",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_struct(TokenInfo)9591_storage)",
            "contract": "ERC1155HybridAsset",
            "src": "contracts/tokenization/templates/ERC1155HybridAsset.sol:62"
          },
          {
            "label": "nextTokenId",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "ERC1155HybridAsset",
            "src": "contracts/tokenization/templates/ERC1155HybridAsset.sol:63"
          },
          {
            "label": "_tokenCollaterals",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_array(t_struct(Collateral)9600_storage)dyn_storage))",
            "contract": "ERC1155HybridAsset",
            "src": "contracts/tokenization/templates/ERC1155HybridAsset.sol:66"
          },
          {
            "label": "userCollateralValue",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155HybridAsset",
            "src": "contracts/tokenization/templates/ERC1155HybridAsset.sol:67"
          },
          {
            "label": "tokenLoans",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(LoanDetails)9613_storage))",
            "contract": "ERC1155HybridAsset",
            "src": "contracts/tokenization/templates/ERC1155HybridAsset.sol:70"
          },
          {
            "label": "_supportedCollateralTokens",
            "offset": 0,
            "slot": "256",
            "type": "t_struct(AddressSet)6063_storage",
            "contract": "ERC1155HybridAsset",
            "src": "contracts/tokenization/templates/ERC1155HybridAsset.sol:74"
          },
          {
            "label": "feeRecipient",
            "offset": 0,
            "slot": "258",
            "type": "t_address",
            "contract": "ERC1155HybridAsset",
            "src": "contracts/tokenization/templates/ERC1155HybridAsset.sol:77"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Collateral)9600_storage)dyn_storage": {
            "label": "struct ERC1155HybridAsset.Collateral[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(TokenType)9575": {
            "label": "enum ERC1155HybridAsset.TokenType",
            "members": [
              "NonFungible",
              "Fungible"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_struct(Collateral)9600_storage)dyn_storage)": {
            "label": "mapping(address => struct ERC1155HybridAsset.Collateral[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(LoanDetails)9613_storage)": {
            "label": "mapping(address => struct ERC1155HybridAsset.LoanDetails)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_array(t_struct(Collateral)9600_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(address => struct ERC1155HybridAsset.Collateral[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(LoanDetails)9613_storage))": {
            "label": "mapping(uint256 => mapping(address => struct ERC1155HybridAsset.LoanDetails))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TokenInfo)9591_storage)": {
            "label": "mapping(uint256 => struct ERC1155HybridAsset.TokenInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)6063_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5748_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Collateral)9600_storage": {
            "label": "struct ERC1155HybridAsset.Collateral",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lockedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lockPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(LoanDetails)9613_storage": {
            "label": "struct ERC1155HybridAsset.LoanDetails",
            "members": [
              {
                "label": "lender",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "interestRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "duration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "borrowedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Set)5748_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TokenInfo)9591_storage": {
            "label": "struct ERC1155HybridAsset.TokenInfo",
            "members": [
              {
                "label": "tokenType",
                "type": "t_enum(TokenType)9575",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "maxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "mintingFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "d73e445df3e01950777793573b23fddb11c5e936881b2b13429149dfab02f9d7": {
      "address": "0x16A54CdEcf7e051084B3CfEC169249e170121A8B",
      "txHash": "0x4a6d1c2426c84dcfca768b84bcab5f2f9ad95fc417deccd533a9a942df6389c2",
      "layout": {
        "solcVersion": "0.8.27",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:508"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "tokenInfo",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_uint256,t_struct(TokenInfo)10207_storage)",
            "contract": "ERC1155HybridAsset",
            "src": "contracts/tokenization/templates/ERC1155HybridAsset.sol:64"
          },
          {
            "label": "nextTokenId",
            "offset": 0,
            "slot": "352",
            "type": "t_uint256",
            "contract": "ERC1155HybridAsset",
            "src": "contracts/tokenization/templates/ERC1155HybridAsset.sol:65"
          },
          {
            "label": "_tokenCollaterals",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_array(t_struct(Collateral)10216_storage)dyn_storage))",
            "contract": "ERC1155HybridAsset",
            "src": "contracts/tokenization/templates/ERC1155HybridAsset.sol:68"
          },
          {
            "label": "userCollateralValue",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155HybridAsset",
            "src": "contracts/tokenization/templates/ERC1155HybridAsset.sol:69"
          },
          {
            "label": "tokenLoans",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(LoanDetails)10229_storage))",
            "contract": "ERC1155HybridAsset",
            "src": "contracts/tokenization/templates/ERC1155HybridAsset.sol:72"
          },
          {
            "label": "_supportedCollateralTokens",
            "offset": 0,
            "slot": "356",
            "type": "t_struct(AddressSet)6676_storage",
            "contract": "ERC1155HybridAsset",
            "src": "contracts/tokenization/templates/ERC1155HybridAsset.sol:76"
          },
          {
            "label": "feeRecipient",
            "offset": 0,
            "slot": "358",
            "type": "t_address",
            "contract": "ERC1155HybridAsset",
            "src": "contracts/tokenization/templates/ERC1155HybridAsset.sol:79"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "359",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155HybridAsset",
            "src": "contracts/tokenization/templates/ERC1155HybridAsset.sol:630"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Collateral)10216_storage)dyn_storage": {
            "label": "struct ERC1155HybridAsset.Collateral[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(TokenType)10191": {
            "label": "enum ERC1155HybridAsset.TokenType",
            "members": [
              "NonFungible",
              "Fungible"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_struct(Collateral)10216_storage)dyn_storage)": {
            "label": "mapping(address => struct ERC1155HybridAsset.Collateral[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(LoanDetails)10229_storage)": {
            "label": "mapping(address => struct ERC1155HybridAsset.LoanDetails)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_array(t_struct(Collateral)10216_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(address => struct ERC1155HybridAsset.Collateral[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(LoanDetails)10229_storage))": {
            "label": "mapping(uint256 => mapping(address => struct ERC1155HybridAsset.LoanDetails))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TokenInfo)10207_storage)": {
            "label": "mapping(uint256 => struct ERC1155HybridAsset.TokenInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)6676_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)6361_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Collateral)10216_storage": {
            "label": "struct ERC1155HybridAsset.Collateral",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lockedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lockPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(LoanDetails)10229_storage": {
            "label": "struct ERC1155HybridAsset.LoanDetails",
            "members": [
              {
                "label": "lender",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "loanAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "interestRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "duration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "borrowedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Set)6361_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TokenInfo)10207_storage": {
            "label": "struct ERC1155HybridAsset.TokenInfo",
            "members": [
              {
                "label": "tokenType",
                "type": "t_enum(TokenType)10191",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "maxSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "mintingFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "79ad8ad9974218907443d4ca32904d3386bfb184525b11bb8665a50ad6d8d729": {
      "address": "0x89C3FBe736EDa478967Ac19Ca8634D3562881f6F",
      "txHash": "0x9c6a8a4fae809caf973cb33a3ced3d5d2e2367314b5e8abdf25d27450c72c5e4",
      "layout": {
        "solcVersion": "0.8.27",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "erc20VaultTokenImpl",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "AssetFactory",
            "src": "contracts/tokenization/AssetFactory.sol:21"
          },
          {
            "label": "erc721CollateralNFTImpl",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "AssetFactory",
            "src": "contracts/tokenization/AssetFactory.sol:22"
          },
          {
            "label": "erc1155HybridAssetImpl",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "AssetFactory",
            "src": "contracts/tokenization/AssetFactory.sol:23"
          },
          {
            "label": "mintingFee",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "AssetFactory",
            "src": "contracts/tokenization/AssetFactory.sol:26"
          },
          {
            "label": "feeRecipient",
            "offset": 0,
            "slot": "155",
            "type": "t_address",
            "contract": "AssetFactory",
            "src": "contracts/tokenization/AssetFactory.sol:27"
          },
          {
            "label": "allAssets",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_address)dyn_storage",
            "contract": "AssetFactory",
            "src": "contracts/tokenization/AssetFactory.sol:43"
          },
          {
            "label": "assetDetails",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_struct(Asset)9592_storage)",
            "contract": "AssetFactory",
            "src": "contracts/tokenization/AssetFactory.sol:46"
          },
          {
            "label": "creatorAssets",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "AssetFactory",
            "src": "contracts/tokenization/AssetFactory.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_enum(TokenType)9596": {
            "label": "enum AssetFactory.TokenType",
            "members": [
              "ERC20",
              "ERC721",
              "ERC1155"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Asset)9592_storage)": {
            "label": "mapping(address => struct AssetFactory.Asset)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Asset)9592_storage": {
            "label": "struct AssetFactory.Asset",
            "members": [
              {
                "label": "assetAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokenType",
                "type": "t_enum(TokenType)9596",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    }
  }
}
